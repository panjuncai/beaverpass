// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email             String                @unique
  firstName         String                @map("first_name")
  lastName          String                @map("last_name")
  avatar            String?
  address           String?
  phone             String?
  createdAt         DateTime?             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime?             @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  posts             Post[]

  @@map("users")
}

model Post {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  category     String
  title        String
  description  String
  condition    String
  amount       Decimal   @default(0) @db.Decimal(12, 2)
  isNegotiable Boolean?  @default(false) @map("is_negotiable")
  deliveryType String    @map("delivery_type")
  posterId     String?   @map("poster_id") @db.Uuid
  status       String?   @default("ACTIVE")
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  images       PostImage[]
  poster       User?     @relation(fields: [posterId], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@index([posterId], map: "idx_posts_poster_id")
  @@map("posts")
}

model PostImage {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  postId    String    @map("post_id") @db.Uuid
  imageUrl  String    @map("image_url")
  imageType String?   @map("image_type")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Restrict)

  @@index([postId], map: "idx_post_images_post_id")
  @@map("post_images")
}
